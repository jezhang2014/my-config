# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

export http_proxy="http://192.168.2.12:7890"
export https_proxy="http://192.168.2.12:7890"
export no_proxy="localhost,127.0.0.1,github.91chifun.workers.dev"

export GOPROXY=https://goproxy.cn
export GO111MODULE=on
export GONOSUMDB=*
export GOSUMB=off

. "$HOME/.cargo/env"
export PATH=~/bin:~/.local/bin:.cargo/bin:~/go/bin:~/tools:/home/jezhang/tools/bin:$PATH:/usr/local/bin:/home/jezhang/sources/arthas/bin:/usr/share/bcc/tools
RUSTUP_DIST_SERVER=https://mirrors.ustc.edu.cn/rust-static
RUSTUP_UPDATE_ROOT=https://mirrors.ustc.edu.cn/rust-static/rustup

alias vim=nvim
alias d=docker
export PAGER="most"
export EDITOR=vim

export VISUAL=nvim
alias vf=vifm
export histchars='%^#'  #否则影响ripgrep的排除

function envoyfind {
    find ~/mnt/asm/istio/ -type f\( -name "*.cc" -or -name "*.h" -or -name "*.c" \) -not -path "istio" -not -path "*/.ccls-cache/*" -not -path "*/test/*" -not -path "*/tests/*"
}
export -f envoyfind

#export TEST_TMPDIR=/root/mnt/bazel_cache
#export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git --exclude test\/ --exclude *_test* --exclude examples\/'
#export FZF_DEFAULT_COMMAND='fd -HI --type f --follow --exclude ..ccls-cache\/ --exclude .git --exclude test\/ --exclude *_test* --exclude examples\/ --exclude tools\/'
export FZF_DEFAULT_COMMAND='fd -I --type f --follow --exclude --exclude test\/ --exclude *_test* --exclude examples\/ --exclude tools\/'

# wasm time settings
#export PATH=$HOME/.wasme/bin:$PATH
#Wasmer
#export WASMER_DIR="/root/.wasmer"
#[ -s "$WASMER_DIR/wasmer.sh" ] && source "$WASMER_DIR/wasmer.sh"

#export WASMTIME_HOME="$HOME/.wasmtime"
#export PATH=$WASMTIME_HOME/bin:$PATH
#export PATH=$HOME/.wame/bin:$PATH
#export PATH=$HOME/mnt2/source/TOOLS/wabt/bin:$PATH
#export PATH=$HOME/mnt2/source/TOOLS/binaryen/bin:$PATH
#source /usr/share/autojump/autojump.sh

export EDITOR=nvim

function nsenter-c() {
    #CONTAINER=$1
    #PID=$(docker inspect -format "{{.State.Pid}}" $CONTAINER)
    POD=$1
    PID=$(ps -ef | grep $POD | grep envoy | awk '{print $2}')
    shift 1
    nsenter -n -t $PID $@
}

PATH="/home/jezhang/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/jezhang/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/jezhang/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/jezhang/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/jezhang/perl5"; export PERL_MM_OPT;
