#go
go tool dist list

#rust
rustup target list

DS110j	Marvell Kirkwood 88F6281	Single Core	1	No	88f628x	DDR2 128 MB
armv5

arm-linux-musleabi工具链不行，illegal instruction
只能用golang自带的工具链编译

sudo apt install clang-9

/source/musl-cross-make$ make TARGET=arm-linux-musleabi

axel https://svwh.dl.sourceforge.net/project/dsgpl/DSM%205.2%20Tool%20Chains/Marvell%2088F628x%20Linux%202.6.32/6281-gcc464_glibc215_88f6281-GPL.txz

看glibc版本，直接当命令执行以下
/lib/libc.so.6

sudo docker ps -a | grep "Exited" | awk '{print $1 }'|xargs sudo docker stop
sudo docker ps -a | grep "Exited" | awk '{print $1 }'|xargs sudo docker rm
sudo docker images|grep none|awk '{print $3 }'|xargs sudo docker rmi

GO_ENABLED=0 GOOS=linux go build -o ratelimit -ldflags="-w -s" src/service_cmd/main.go

minikube start --vm-driver=docker --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers

minikube start

kubectl create deployment hello-minikube --image=cilium/echoserver:1.10
kubectl get pods --context=minikube
kubectl expose deployment hello-minikube --type=NodePort --port=8080
kubectl delete deployment hello-minikube
kubectl get pod
minikube service hello-minikube --url
minikube docker-env
docker ps
kubectl api-versions

kubectl port-forward -n default hello-minikube 8099:31443
kubectl get svc
minikube ip
kubectl port-forward hello-minikube-8555b8944b-5brfd 8080:8080

kubectl edit svc hello-minikube 手工将8080修改为80端口保存即可

kubectl get service $SERVICE --output='jsonpath="{.spec.ports[0].nodePort}"'
minikube start --docker-env http_proxy=http://$YOURPROXY:PORT \
                 --docker-env https_proxy=https://$YOURPROXY:PORT
export no_proxy=$no_proxy,$(minikube ip)
kubectl config use-context minikube

eval $(minikube docker-env) #当前命令行执行这个切换到minikube的镜像空间
docker ps 就可以看到minikube内的镜像了

istioctl manifest apply
istioctl manifest apply --set addonComponents.grafana.enabled=true
istioctl manifest apply --set profile=demo
istioctl profile list
istioctl profile dump demo

kubectl label namespace default istio-injection=enabled
之后必须要删除之前的deployment后重新apply -f

#遇到istio-ca-root-cert not found
kubectl rollout restart deployment istiod -n istio-system

kubectl exec -it helloworld-v1-5b75657f75-ph2tb -c istio-proxy bash
kubectl exec --user=root -it helloworld-v1-5b75657f75-ph2tb -c istio-proxy bash

#切换到minikube的docker环境
eval $(minikube -p minikube docker-env)

#ID为describe的proxy的docker://xxx

#这样才可以iptables -t nat -L
docker exec --privileged=true -it -u root 6fae105817002ee73f84fb0d80a7e030a68a2195867965fa64a1c3466d8dc2eb bash

docker exec -u root ID -- /bin/bash

#vscode
创建.plantuml文件，然后用alt-D生成preview

kubectl exec -it istio-pilot-58887f6445-zq5rc -c discovery -n istio-system -- pilot-discovery request GET /debug/configz|grep -i envoyfilter


cargo install cargo-generate
git clone https://github.com/bytecodealliance/wasmtime.git

gr-iio 必须用upgrade-2.8分支

git clone https://github.com/go-delve/delve.git
git clone https://github.com/istio/envoy.git
git clone https://github.com/alibaba/arthas
git clone https://github.com/alibaba/Sentinel.git

git clone https://github.com/jbarratt/envoy_ratelimit_example.git
git clone https://github.com/envoyproxy/ratelimit.git

git clone https://github.com/istio/istio.git
git clone https://github.com/istio/proxy.git
git clone https://github.com/envoyproxy/go-control-plane.git
git clone https://github.com/solo-io/wasme.git
git clone https://github.com/solo-io/gloo.git
git clone https://github.com/solo-io/envoy-gloo.git

docker tag docker.io/mirrorgooglecontainers/echoserver:1.10 k8s.gcr.io/echoserver:1.10


git clone https://github.com/miaozhang9/wecharCodejar.git
git clone https://github.com/overtrue/wechat.git

git clone https://github.com/cytle/wechat_web_devtools.git
axel https://dl.nwjs.io/v0.47.0/nwjs-sdk-v0.47.0-linux-x64.tar.gz

./bin/wxdt install
rm -rf /tmp/wxdt_xsp目录
./bin/wxdt --disable-gpu

dosbox -conf xxx.conf #ctrl-F9直接推出
配置midi:
[midi]
mpu401=intelligent
mididevice=alsa
midiconfig=128:0


git clone https://github.com/kubernetes/kompose.git
https://github.com/kubernetes/sample-controller.git

安装libqt5websockets5-dev
qtdeclarative5-dev
